using System;
using System.Runtime.InteropServices;

namespace ClrDebug.DbgEng.Vtbl
{
    [StructLayout(LayoutKind.Sequential)]
    internal struct IDebugControlVtbl
    {
        public readonly IntPtr GetInterrupt;
        public readonly IntPtr SetInterrupt;
        public readonly IntPtr GetInterruptTimeout;
        public readonly IntPtr SetInterruptTimeout;
        public readonly IntPtr GetLogFile;
        public readonly IntPtr OpenLogFile;
        public readonly IntPtr CloseLogFile;
        public readonly IntPtr GetLogMask;
        public readonly IntPtr SetLogMask;
        public readonly IntPtr Input;
        public readonly IntPtr ReturnInput;
        public readonly IntPtr Output;
        public readonly IntPtr OutputVaList;
        public readonly IntPtr ControlledOutput;
        public readonly IntPtr ControlledOutputVaList;
        public readonly IntPtr OutputPrompt;
        public readonly IntPtr OutputPromptVaList;
        public readonly IntPtr GetPromptText;
        public readonly IntPtr OutputCurrentState;
        public readonly IntPtr OutputVersionInformation;
        public readonly IntPtr GetNotifyEventHandle;
        public readonly IntPtr SetNotifyEventHandle;
        public readonly IntPtr Assemble;
        public readonly IntPtr Disassemble;
        public readonly IntPtr GetDisassembleEffectiveOffset;
        public readonly IntPtr OutputDisassembly;
        public readonly IntPtr OutputDisassemblyLines;
        public readonly IntPtr GetNearInstruction;
        public readonly IntPtr GetStackTrace;
        public readonly IntPtr GetReturnOffset;
        public readonly IntPtr OutputStackTrace;
        public readonly IntPtr GetDebuggeeType;
        public readonly IntPtr GetActualProcessorType;
        public readonly IntPtr GetExecutingProcessorType;
        public readonly IntPtr GetNumberPossibleExecutingProcessorTypes;
        public readonly IntPtr GetPossibleExecutingProcessorTypes;
        public readonly IntPtr GetNumberProcessors;
        public readonly IntPtr GetSystemVersion;
        public readonly IntPtr GetPageSize;
        public readonly IntPtr IsPointer64Bit;
        public readonly IntPtr ReadBugCheckData;
        public readonly IntPtr GetNumberSupportedProcessorTypes;
        public readonly IntPtr GetSupportedProcessorTypes;
        public readonly IntPtr GetProcessorTypeNames;
        public readonly IntPtr GetEffectiveProcessorType;
        public readonly IntPtr SetEffectiveProcessorType;
        public readonly IntPtr GetExecutionStatus;
        public readonly IntPtr SetExecutionStatus;
        public readonly IntPtr GetCodeLevel;
        public readonly IntPtr SetCodeLevel;
        public readonly IntPtr GetEngineOptions;
        public readonly IntPtr AddEngineOptions;
        public readonly IntPtr RemoveEngineOptions;
        public readonly IntPtr SetEngineOptions;
        public readonly IntPtr GetSystemErrorControl;
        public readonly IntPtr SetSystemErrorControl;
        public readonly IntPtr GetTextMacro;
        public readonly IntPtr SetTextMacro;
        public readonly IntPtr GetRadix;
        public readonly IntPtr SetRadix;
        public readonly IntPtr Evaluate;
        public readonly IntPtr CoerceValue;
        public readonly IntPtr CoerceValues;
        public readonly IntPtr Execute;
        public readonly IntPtr ExecuteCommandFile;
        public readonly IntPtr GetNumberBreakpoints;
        public readonly IntPtr GetBreakpointByIndex;
        public readonly IntPtr GetBreakpointById;
        public readonly IntPtr GetBreakpointParameters;
        public readonly IntPtr AddBreakpoint;
        public readonly IntPtr RemoveBreakpoint;
        public readonly IntPtr AddExtension;
        public readonly IntPtr RemoveExtension;
        public readonly IntPtr GetExtensionByPath;
        public readonly IntPtr CallExtension;
        public readonly IntPtr GetExtensionFunction;
        public readonly IntPtr GetWindbgExtensionApis32;
        public readonly IntPtr GetWindbgExtensionApis64;
        public readonly IntPtr GetNumberEventFilters;
        public readonly IntPtr GetEventFilterText;
        public readonly IntPtr GetEventFilterCommand;
        public readonly IntPtr SetEventFilterCommand;
        public readonly IntPtr GetSpecificFilterParameters;
        public readonly IntPtr SetSpecificFilterParameters;
        public readonly IntPtr GetSpecificFilterArgument;
        public readonly IntPtr SetSpecificFilterArgument;
        public readonly IntPtr GetExceptionFilterParameters;
        public readonly IntPtr SetExceptionFilterParameters;
        public readonly IntPtr GetExceptionFilterSecondCommand;
        public readonly IntPtr SetExceptionFilterSecondCommand;
        public readonly IntPtr WaitForEvent;
        public readonly IntPtr GetLastEventInformation;
    }
}
